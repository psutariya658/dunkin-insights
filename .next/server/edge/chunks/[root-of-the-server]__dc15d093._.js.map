{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { getToken } from 'next-auth/jwt'\n\nexport async function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl\n  \n  // Public routes that don't require authentication\n  const publicPaths = [\n    '/',\n    '/login',\n    '/api/auth',\n    '/_next',\n    '/favicon.ico',\n    '/images',\n    '/fonts',\n  ]\n  \n  // Check if the current path is public\n  const isPublicPath = publicPaths.some(path => \n    pathname === path || pathname.startsWith(`${path}/`)\n  )\n  \n  // Allow public paths to pass through\n  if (isPublicPath) {\n    return NextResponse.next()\n  }\n\n  console.log('Middleware processing:', pathname)\n  \n  // Get the session token\n  const token = await getToken({ \n    req: request,\n    secret: process.env.NEXTAUTH_SECRET || 'your-secret-key',\n  })\n  \n  console.log('Session token:', token ? 'exists' : 'not found')\n\n  // If no token and trying to access protected route, redirect to login\n  if (!token) {\n    console.log('No token found, redirecting to login')\n    const loginUrl = new URL('/login', request.url)\n    loginUrl.searchParams.set('callbackUrl', pathname)\n    return NextResponse.redirect(loginUrl)\n  }\n\n  // Check for admin role if accessing admin routes\n  if (pathname.startsWith('/admin') && token.role !== 'ADMIN') {\n    console.log('Unauthorized access to admin area')\n    return NextResponse.redirect(new URL('/unauthorized', request.url))\n  }\n  \n  // Token is valid, continue with the request\n  console.log('User authenticated, allowing access to:', pathname)\n  return NextResponse.next()\n}\n\n// Match all routes except static files, API routes, and public paths\nexport const config = {\n  matcher: [\n    '/((?!_next/static|_next/image|favicon.ico|api/auth|login|images|fonts).*)',\n    '/admin/:path*',\n    '/api/ratings',\n    '/api/employees'\n  ]\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,kDAAkD;IAClD,MAAM,cAAc;QAClB;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,sCAAsC;IACtC,MAAM,eAAe,YAAY,IAAI,CAAC,CAAA,OACpC,aAAa,QAAQ,SAAS,UAAU,CAAC,GAAG,KAAK,CAAC,CAAC;IAGrD,qCAAqC;IACrC,IAAI,cAAc;QAChB,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,QAAQ,GAAG,CAAC,0BAA0B;IAEtC,wBAAwB;IACxB,MAAM,QAAQ,MAAM,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAD,EAAE;QAC3B,KAAK;QACL,QAAQ,QAAQ,GAAG,CAAC,eAAe,IAAI;IACzC;IAEA,QAAQ,GAAG,CAAC,kBAAkB,QAAQ,WAAW;IAEjD,sEAAsE;IACtE,IAAI,CAAC,OAAO;QACV,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC9C,SAAS,YAAY,CAAC,GAAG,CAAC,eAAe;QACzC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,iDAAiD;IACjD,IAAI,SAAS,UAAU,CAAC,aAAa,MAAM,IAAI,KAAK,SAAS;QAC3D,QAAQ,GAAG,CAAC;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,QAAQ,GAAG;IACnE;IAEA,4CAA4C;IAC5C,QAAQ,GAAG,CAAC,2CAA2C;IACvD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;KACD;AACH"}}]
}