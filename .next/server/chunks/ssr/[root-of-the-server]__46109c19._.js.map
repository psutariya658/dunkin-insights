{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/Admin/Desktop/project/dunkin-feedback/src/app/login/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { LockClosedIcon, EnvelopeIcon } from '@heroicons/react/24/outline';\nimport { Spinner } from '@/components/ui/spinner';\n\ntype FormErrors = {\n  email?: string;\n  password?: string;\n};\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [formError, setFormError] = useState('');\n  const [errors, setErrors] = useState<FormErrors>({});\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setFormError('');\n    const res = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password }),\n    });\n    const data = await res.json();\n    setLoading(false);\n    if (res.ok) {\n      router.push('/');\n    } else {\n      setError(data.error || 'Login failed');\n    }\n  };\n\n  const handleGoogleLogin = () => {\n    window.location.href = '/api/auth/signin/google';\n  };\n\n  // Validate form fields\n  const validateForm = (): boolean => {\n    const newErrors: FormErrors = {};\n    \n    if (!email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    \n    if (!password) {\n      newErrors.password = 'Password is required';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-50\">\n      <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded shadow\">\n        <h2 className=\"text-2xl font-bold text-center\">Login to your account</h2>\n        <form className=\"space-y-4\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <EnvelopeIcon \n                  className={`h-5 w-5 ${errors.email ? 'text-red-400' : 'text-gray-400'}`} \n                  aria-hidden=\"true\" \n                />\n              </div>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"username\"\n                required\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                  // Clear error when user starts typing\n                  if (errors.email) {\n                    setErrors(prev => ({ ...prev, email: undefined }));\n                  }\n                }}\n                onBlur={() => validateForm()}\n                className={`block w-full pl-10 pr-3 py-2 border ${\n                  errors.email ? 'border-red-300 text-red-900 focus:ring-red-500 focus:border-red-500' : 'border-gray-300 focus:ring-[#D80F2B] focus:border-[#D80F2B]'\n                } rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-1 sm:text-sm`}\n                placeholder=\"your@email.com\"\n                aria-invalid={!!errors.email}\n                aria-describedby={errors.email ? 'email-error' : undefined}\n              />\n            </div>\n            {errors.email && (\n              <p className=\"mt-1 text-sm text-red-600\" id=\"email-error\">\n                {errors.email}\n              </p>\n            )}\n          </div>\n          \n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Password\n            </label>\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <LockClosedIcon \n                  className={`h-5 w-5 ${errors.password ? 'text-red-400' : 'text-gray-400'}`} \n                  aria-hidden=\"true\" \n                />\n              </div>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                  // Clear error when user starts typing\n                  if (errors.password) {\n                    setErrors(prev => ({ ...prev, password: undefined }));\n                  }\n                }}\n                onBlur={() => validateForm()}\n                className={`block w-full pl-10 pr-3 py-2 border ${\n                  errors.password ? 'border-red-300 text-red-900 focus:ring-red-500 focus:border-red-500' : 'border-gray-300 focus:ring-[#D80F2B] focus:border-[#D80F2B]'\n                } rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-1 sm:text-sm`}\n                placeholder=\"••••••••\"\n                aria-invalid={!!errors.password}\n                aria-describedby={errors.password ? 'password-error' : undefined}\n              />\n            </div>\n            {errors.password && (\n              <p className=\"mt-1 text-sm text-red-600\" id=\"password-error\">\n                {errors.password}\n              </p>\n            )}\n            <div className=\"mt-1 flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-[#D80F2B] focus:ring-[#D80F2B] border-gray-300 rounded\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-xs text-gray-600\">\n                  Remember me\n                </label>\n              </div>\n              <div className=\"text-xs\">\n                <a href=\"/forgot-password\" className=\"font-medium text-[#D80F2B] hover:text-[#b30d24]\">\n                  Forgot password?\n                </a>\n              </div>\n            </div>\n          </div>\n\n          {error && <div className=\"text-red-500 text-sm\">{error}</div>}\n          <button\n            type=\"submit\"\n            className=\"w-full py-2 font-semibold text-white bg-blue-600 rounded hover:bg-blue-700\"\n            disabled={loading}\n          >\n            {loading ? 'Logging in...' : 'Login'}\n          </button>\n        </form>\n        <div className=\"flex items-center justify-center space-x-2\">\n          <span className=\"text-gray-500\">or</span>\n          <button\n            onClick={handleGoogleLogin}\n            className=\"px-4 py-2 text-sm font-semibold text-gray-700 bg-gray-200 rounded hover:bg-gray-300\"\n          >\n            Login with Google\n          </button>\n        </div>\n        <div className=\"text-center text-sm text-gray-600\">\n          Don&apos;t have an account?{' '}\n          <Link href=\"/signup\" className=\"text-blue-600 hover:underline\">Sign up</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}