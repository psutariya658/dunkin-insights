{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Admin/Desktop/project/dunkin-feedback/src/app/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\n\nexport default function RegisterPage() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const router = useRouter();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (!name || !email || !password) {\n      setError('All fields are necessary.');\n      return;\n    }\n\n    try {\n      const res = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n        }),\n      });\n\n      if (res.ok) {\n        const form = e.target as HTMLFormElement;\n        form.reset();\n        router.push('/login');\n      } else {\n        const { message } = await res.json();\n        setError(message || 'User registration failed.');\n      }\n    } catch (error) {\n      setError('Something went wrong.');\n      console.error('Registration error:', error);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n      <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\n        <h1 className=\"text-2xl font-bold text-center text-gray-900\">\n          Create an Account\n        </h1>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"name\"\n              className=\"text-sm font-medium text-gray-700\"\n            >\n              Full Name\n            </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              onChange={(e) => setName(e.target.value)}\n              className=\"w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              required\n            />\n          </div>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"text-sm font-medium text-gray-700\"\n            >\n              Email\n            </label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              required\n            />\n          </div>\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"w-full px-3 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              required\n            />\n          </div>\n          {error && (\n            <div className=\"p-2 text-sm text-red-600 bg-red-100 rounded-md\">\n              {error}\n            </div>\n          )}\n          <div>\n            <button\n              type=\"submit\"\n              className=\"w-full px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Sign Up\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU;YAChC,SAAS;YACT;QACF;QAEA,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,iBAAiB;gBACvC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;oBACA;gBACF;YACF;YAEA,IAAI,IAAI,EAAE,EAAE;gBACV,MAAM,OAAO,EAAE,MAAM;gBACrB,KAAK,KAAK;gBACV,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,IAAI;gBAClC,SAAS,WAAW;YACtB;QACF,EAAE,OAAO,OAAO;YACd,SAAS;YACT,QAAQ,KAAK,CAAC,uBAAuB;QACvC;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA+C;;;;;;8BAG7D,8OAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,8OAAC;;8CACC,8OAAC;oCACC,SAAQ;oCACR,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;oCACvC,WAAU;oCACV,QAAQ;;;;;;;;;;;;sCAGZ,8OAAC;;8CACC,8OAAC;oCACC,SAAQ;oCACR,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oCACxC,WAAU;oCACV,QAAQ;;;;;;;;;;;;sCAGZ,8OAAC;;8CACC,8OAAC;oCACC,SAAQ;oCACR,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,WAAU;oCACV,QAAQ;;;;;;;;;;;;wBAGX,uBACC,8OAAC;4BAAI,WAAU;sCACZ;;;;;;sCAGL,8OAAC;sCACC,cAAA,8OAAC;gCACC,MAAK;gCACL,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///Users/Admin/Desktop/project/dunkin-feedback/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}